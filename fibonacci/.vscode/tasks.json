{
  // See https://go.microsoft.com/fwlink/?LinkId=733558
  // for the documentation about the tasks.json format

  // Available variables which can be used inside of strings.
  // $(workspaceFolder): the project root folder
  // $(file): the current opened file
  // $(fileDirname): the current opened file's dirname
  // ${fileBasename): the current opened file's basename
  // $(fileExtname): the current opened file's extension
  // $(cwd): the current working directory of the spawned process

  "version": "2.0.0",
  "type": "shell",
  "presentation": {
    "reveal": "always",
    "panel": "dedicated", // options: 'dedicated', 'shared'
    "showReuseMessage": false // Controls whether to show the "Terminal will be reused by tasks, press any key to close it" message.
  },

  "tasks": [
    {
      "label": "fibonacci->run_on->docker_compose->on_env->dev->up",
      "command": "docker compose --project-name fibonacci --file docker_composes/docker-compose.dev.yml up --build --detach"
    },
    {
      "label": "fibonacci->run_on->docker_compose->on_env->dev->down",
      "command": "docker compose --project-name fibonacci --file docker_composes/docker-compose.dev.yml down"
    },
    {
      "label": "fibonacci->run_on->docker_compose->on_env->dev->logs",
      "command": "docker compose --project-name fibonacci --file docker_composes/docker-compose.dev.yml logs --timestamps --follow"
    },
    {
      "label": "fibonacci->run_on->docker_compose->on_env->prod->up",
      "command": "docker compose --project-name fibonacci --file docker_composes/docker-compose.yml up --build --detach"
    },
    {
      "label": "fibonacci->run_on->docker_compose->on_env->prod->down",
      "command": "docker compose --project-name fibonacci --file docker_composes/docker-compose.yml down"
    },
    {
      "label": "fibonacci->run_on->docker_compose->on_env->prod->logs",
      "command": "docker compose --project-name fibonacci --file docker_composes/docker-compose.yml logs --timestamps --follow"
    },
    {
      "label": "fibonacci->run_on->kubernetes->prerequisites->push_images->of->prod->to_registry->local",
      "command": "chmod 755 scripts/compose_registry_push.sh && ./scripts/compose_registry_push.sh --docker-compose-file docker_composes/docker-compose.yml --registry-server localhost:4321 --registry-username registry_user --project-name ${workspaceFolderBasename}"
    },
    {
      "label": "fibonacci->run_on->kubernetes->prerequisites->push_images->of->prod->to_registry->docker_hub",
      "command": "chmod 755 scripts/compose_registry_push.sh && ./scripts/compose_registry_push.sh --docker-compose-file docker_composes/docker-compose.yml --registry-server docker.io --registry-username anuprshetty --project-name ${workspaceFolderBasename}"
    },
    {
      "label": "fibonacci->run_on->kubernetes->prerequisites->ingress_nginx_controller->setup",
      "command": "chmod 755 ./scripts/ingress_nginx_controller/setup.sh && ./scripts/ingress_nginx_controller/setup.sh"
    },
    {
      "label": "fibonacci->run_on->kubernetes->prerequisites->ingress_nginx_controller->remove",
      "command": "chmod 755 ./scripts/ingress_nginx_controller/remove.sh && ./scripts/ingress_nginx_controller/remove.sh"
    },
    {
      "label": "fibonacci->run_on->kubernetes->using->manifests->apply",
      "command": "chmod 755 ./scripts/kubernetes/manifests/apply.sh && ./scripts/kubernetes/manifests/apply.sh"
    },
    {
      "label": "fibonacci->run_on->kubernetes->using->manifests->delete",
      "command": "chmod 755 ./scripts/kubernetes/manifests/delete.sh && ./scripts/kubernetes/manifests/delete.sh"
    },
    {
      "label": "fibonacci->run_on->kubernetes->using->helm->install",
      "command": "chmod 755 ./scripts/kubernetes/helm/install.sh && ./scripts/kubernetes/helm/install.sh"
    },
    {
      "label": "fibonacci->run_on->kubernetes->using->helm->uninstall",
      "command": "chmod 755 ./scripts/kubernetes/helm/uninstall.sh && ./scripts/kubernetes/helm/uninstall.sh"
    },
    {
      "label": "fibonacci->run_on->kubernetes->using->helm->test",
      "command": "helm test fibonacci-prod --namespace fibonacci-prod --logs"
    }
  ]
}

# Default values for fibonacci.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# scope in helm chart: $ = {"Values" : {}}
#
# - $ --> points to root level
# - . --> points to current level
# So $.Values --> points to values of helm chart

app:
  env: prod

deployments:
  - name: redis-server
    replicas: 1
    containers:
      - containerPort: 6379

  - name: worker
    replicas: 1
    containers:
      - env:
          - name: REDIS_SERVER_HOST
            value: redis-server-service-cluster-ip
          - name: REDIS_SERVER_PORT
            value: "6379"

  - name: postgres-server
    replicas: 1
    volumes:
      - name: postgres-server-volume
        persistentVolumeClaim:
          claimName: postgres-server-persistent-volume-claim
    containers:
      - containerPort: 5432
        volumeMounts:
          - name: postgres-server-volume
            mountPath: /var/lib/postgresql/data # the path within the container where the volume content will be mounted.
            subPath: postgresql/data # subdirectory within the volume to be mounted inside the container.
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgres-server-secret
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-server-secret
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: postgres-server-secret
                key: POSTGRES_DB

  - name: backend
    replicas: 1
    containers:
      - containerPort: 5000
        env:
          - name: APP_PORT
            value: "5000"

          - name: POSTGRES_HOST
            value: postgres-server-service-cluster-ip
          - name: POSTGRES_PORT
            value: "5432"
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgres-server-secret
                key: POSTGRES_USER
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgres-server-secret
                key: POSTGRES_PASSWORD
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: postgres-server-secret
                key: POSTGRES_DB

          - name: REDIS_SERVER_HOST
            value: redis-server-service-cluster-ip
          - name: REDIS_SERVER_PORT
            value: "6379"

  - name: frontend
    replicas: 1
    containers:
      - containerPort: 3000
        env:
          - name: BACKEND_HOST
            value: backend-service-cluster-ip
          - name: BACKEND_PORT
            value: "5000"
